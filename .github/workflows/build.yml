name: Create and publish a Docker image
on:
  push:
    branches: ["development"]
# Configures this workflow to run every time a change is pushed to the branch called release.

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_ID: fantasyfootball-service
  GKE_CLUSTER: fantasyfootball-cluster # Add your cluster name here.
  GKE_ZONE: europe-west1 # Add your cluster zone here.
  DEPLOYMENT_NAME: fantasy-football-service # Add your deployment name here.

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.

jobs:
  build-and-deploy-kubernetes:
    runs-on: ubuntu-latest
    # There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.

    permissions:
      contents: read
      packages: write
    # Sets the permissions granted to the GITHUB_TOKEN for the actions in this job.

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        env:
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          IMAGE: $IMAGE
          DEPLOYMENT_NAME: $DEPLOYMENT_NAME
          GITHUB_SHA: ${{ github.sha }}
        run: |-
          # Update image in all yaml files
          find ./deployment -name '*.yaml' -exec sed -i "s|image: gcr.io/.*|image: gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA|g" {} +

          # Apply all yaml files in the deployment directory
          kubectl apply -f ./deployment

          # Check the status of the deployment
          kubectl rollout status deployment/$DEPLOYMENT_NAME

          # Get the services
          kubectl get services -o wide
